<?xml version="1.0" encoding="UTF-8"?>
<lanzador>
	<comando nombre="git" alias="Git" descripcion="cliente de Git">
		<aplicaciones>
			<aplicacion nombre="commit" descripcion="actualiza indice en el repositorio local">
				<argumentos>
					<grupo nombre="Verboso">
						<argumento orden="1" nombre="-v" alternativo="--verbose" tipo="Boolean" default="true" descripcion="muestra lo comitteado" optional="true" enable="true">
							<etiqueta>Verboso</etiqueta>							
						</argumento>
						<argumento orden="2" nombre="pathVerbose" tipo="Search" enable="false"/>
					</grupo>					
					<argumento orden="3" nombre="-m" alternativo="--message" tipo="Text" descripcion="mensaje del commit" optional="false">
						<etiqueta>Mensaje para el log</etiqueta>
						<reglas>
							<regla>VALOR.contains(".log")</regla>
						</reglas>
					</argumento>
					<argumento orden="4" nombre="-F" alternativo="--file" tipo="Search" descripcion="lee mensaje de archivo">
						<etiqueta>Archivo origen del mensaje</etiqueta>
					</argumento>
					<argumento orden="5" nombre="-S" alternativo="--gpg-sign" tipo="Propertie" tipoValor="Text" descripcion="firma GPG" separador="=">
						<etiqueta>Key ID</etiqueta>
					</argumento>
					<argumento orden="6" nombre="-u" alternativo="--untracked-files" tipo="Propertie" descripcion="firma GPG" separador="=" tipoValor="ComboBox">
						<etiqueta>Modo</etiqueta>
						<lista>
							<valor>all</valor>
							<valor>normal</valor>
							<valor>no</valor>
						</lista>
					</argumento>
					<argumento orden="7" nombre="--status" tipo="Boolean" default="false" descripcion="incluye status en el mensaje del commit" />
					<argumento orden="8" nombre="-m" alternativo="--mainline"	descripcion="numero padre" tipo="Number" mask="#">
						<etiqueta>Version</etiqueta>
						<reglas>
							<regla>VALOR != null</regla>
							<regla>VALOR > 0</regla>
						</reglas>
					</argumento>
					<!-- este campo es del git revert, se agrega para mostrar el campo numérico -->
					<argumento orden="9" nombre="--date" descripcion="sobreescribe la fecha del commit" tipo="Date" mask="YYYYMMDD">
						<etiqueta>Fecha del commit</etiqueta>
					</argumento>
				</argumentos>
			</aplicacion>
		</aplicaciones>
		<argumentos>
			<argumento>
				<etiqueta>Nombre(s) de archivo(s)</etiqueta>
			</argumento>
		</argumentos>
		<validaciones>
			<validacion>
				<accion nombre="habilitarCampoSiCheckboxEstaEnTrue">
					<parametro>-v</parametro>
					<parametro>pathVerbose</parametro>
				</accion>
			</validacion>
			<validacion>
				<accion nombre="mostrarFechaEnFormatoLatino">					
					<constante>La fecha de hoy es: </constante>
					<parametro>--date</parametro>
				</accion>
			</validacion>
		</validaciones>
		<salida>
			<encabezado>
				<usuario>USER</usuario>
				<mensaje>Ejecucion de prueba</mensaje>
			</encabezado>
			<fin>
				<fechaDeEjecucion />
				<tiempoTotal />
			</fin>
			<target>
				<stdout />
				<log>salida.log</log>
				<mail>algo2@gmail.com</mail>
			</target>
		</salida>
	</comando>
	<comando nombre="echo">
		<aplicaciones>
			<aplicacion>
				<argumento>
					<etiqueta>Mensaje</etiqueta>
				</argumento>
			</aplicacion>
		</aplicaciones>
	</comando>
</lanzador>



- tipos:

	- Boolean = checkbox
	- Text = fieldtext
	- Search = fieldtext + ícono (buscador)
	- Propertie=fieldtext al que se le especifica un separador para definir el argumento
	- Combo=desplegable con la lista de valores que el usuario puede seleccionar


- tag <argumento>:
	- el tag <grupo> sirve para agrupar argumentos en la pantalla. Crea una especie de "frame" con un título, a modo descriptivo.
	- el atributo "nombre" es opcional y puede ser: 
				- flag del comando (o comando parametrizado) correspondiente.
				- si no está especificado, son los argumentos del comando (o sea, no son opciones). Por ejemplo, en el del comando "git" el argumento luego de los parametros (observar que no tiene el atributo nombre) sería el <filepattern> (nombre de archivo) del usage del git.
				- un nombre cualquier para identificar el tag particular en el xml y definir validaciones sobre el mismo.
				
	- el atributo "optional" permitiría definir estilos sobre el widget correspondiente que indiquen que el campo es obligatorio.
	- el atributo "descripción" es un texto que se muestra en un fieldtext no modificable al final de la pantalla.
	- el atributo "enable" habilita o deshabilita el campo en la pantalla para su edición/modificación. Por default son todos enable=true.
	- el atributo "orden" es opcional. Se usa para definir un orden de los campos en la pantalla, y (posiblemente) validaciones sobre dichos elementos. 
	- el argumento default (o sea, si no se especifica tipo): tipo Text. Por ejemplo, el  campo mensaje de la aplicación "echo".
	- posibles mask para el campo number (que es un fieldtext con formato): #, ##.##...
	- posibles mask para el campo fecha: YYYYMMDD, DD-MM-YYYY
	- en las reglas, VALOR representa el valor actual del argumento. Las reglas son validaciones sobre el campo actual. 
	- las validaciones de la aplicación se definen luego de los argumentos. Se define un tag para la acción donde el nombre representa el nombre del método a invocar en Java (se resuelve por reflection), y los parámetros se especifican en el orden que espera el método. 
					- el tag <parametro> se usa para el valor de los campos definidos en el xml. 
					- el tag <constante> se usa para pasarle valores constantes al método (cadenas, números).
	
	
-tag <comando>:
	- un comando tiene que tener por lo menos una aplicacion
	- son opcionales los tags parametros, argumentos y salida. Por ejemplo, un aplicacion puede no tener subparametros; en ese caso, se le especifican solo los argumentos, si existieran.
	- en la salida se le puede especificar un encabezado y un final con cierta información de la corrida actual, y en el tag target se configura si saldrá por pantalla, redirecciona a un archivo, o envía mail (no lo selecciona el usuario de la aplicación)


- pantalla:

	- los comandos parametrizados se representan como un botón que lleva a la pantalla siguiente.
	- el layout de las pantallas de cada comando tendrá los botones: Cancelar, Volver, Aceptar, Limpiar, y un textfield de sólo lectura donde irá, si lo hubiere, lo definido en el atributo "descripción" de la representación en pantalla del argumento que tiene el foco.
