<?xml version="1.0" encoding="UTF-8"?>
<lanzador>
	<comando nombre="git" alias="Git" descripcion="cliente de Git">
		<aplicaciones>
			<aplicacion nombre="commit" descripcion="actualiza indice en el repositorio local">
				<argumentos>
					<argumento orden="1" nombre="-v" alternativo="--verbose" descripcion="muestra lo comitteado" optional="true" enable="true" tipo="Boolean" valorInicial="true" >
							<etiqueta etiqueta="Verboso" />		

					</argumento>
					<argumento orden="2" nombre="pathVerbose" auxiliar="true" enable="false"  tipo="Search" /> <!-- ficticio, no es del comando git. Representaría la ruta del archivo donde dejar el log del -v. Es para mostrar las validaciones generales de la aplicación (ver más abajo) -->
					<argumento orden="3" nombre="-m" alternativo="--message" descripcion="mensaje del commit" optional="false" tipo="Text" >
						<etiqueta etiqueta="Mensaje para el log" />
						<reglas>
							<regla regla="VALOR.contains(.log)" />
						</reglas>
					</argumento>
					<argumento orden="4" nombre="-F" alternativo="--file" descripcion="lee mensaje de archivo" tipo="Search">
						<etiqueta etiqueta="Archivo origen del mensaje" />
					</argumento>
					<argumento orden="5" nombre="-S" alternativo="--gpg-sign" separador="=" descripcion="firma GPG" tipo="Text">
						<etiqueta etiqueta="Key ID" >
						</etiqueta>
					</argumento>
					<argumento orden="6" nombre="-u" alternativo="--untracked-files" separador="=" descripcion="firma GPG" tipo="ComboBox">
						<etiqueta etiqueta="Modo" >
						</etiqueta>
						<valores>
							<valor valor="all" >
							</valor>
							<valor valor="normal" >
							</valor>
							<valor valor="no" >
							</valor>
						</valores>
					</argumento>
					<argumento orden="7" nombre="--status" descripcion="incluye status en el mensaje del commit" tipo="Boolean" valorInicial="false" />
					<argumento orden="8" nombre="-m" alternativo="--mainline" descripcion="numero padre" tipo="Number" mask="#">
						<etiqueta etiqueta="Version" >
						</etiqueta>
						<reglas>
							<regla regla="VALOR != null" >
							</regla>
							<regla regla="VALOR > 0" >
							</regla>
						</reglas>
					</argumento>
					<!-- este campo es del git revert, se agrega para mostrar el campo numérico -->
					<argumento orden="9" nombre="--date" descripcion="sobreescribe la fecha del commit" tipo="Date" mask="YYYYMMDD">
						<etiqueta etiqueta="Fecha del commit" >
						</etiqueta>
					</argumento>
				</argumentos>
				<validaciones>
					<validacion>
						<accion nombre="habilitarCampoSiCheckboxEstaEnTrue">
							<parametro parametro="-v" >
							</parametro>
							<parametro parametro="pathVerbose" >
							</parametro>
						</accion>
					</validacion>
					<validacion>
						<accion nombre="mostrarFechaEnFormatoLatino">					
							<constante constante="La fecha de hoy es:" >
							</constante>
							<parametro parametro="--date" >
							</parametro>
						</accion>
					</validacion>
				</validaciones>
			</aplicacion>
		</aplicaciones>
		<argumentos>
			<argumento>
				<etiqueta etiqueta="Nombre(s) de archivo(s)" >
				</etiqueta>
			</argumento>
		</argumentos>
		<salida salida="./input/archivo.txt" >
		</salida>
	</comando>
	<comando nombre="echo">
		<aplicaciones>
			<aplicacion>
				<argumento>
					<etiqueta etiqueta="Mensaje" >
					</etiqueta>
				</argumento>
			</aplicacion>
		</aplicaciones>
	</comando>
</lanzador>



- tipos:

	- Boolean = checkbox
	- Text = fieldtext
	- Search = fieldtext + ícono (buscador)
	- Combo=desplegable con la lista de valores que el usuario puede seleccionar


- tag <argumento>:
	- el atributo "nombre" es opcional y puede ser: 
				- flag del comando ("comando parametrizado") correspondiente.
				- si no está especificado, son los argumentos del comando (o sea, no son opciones). Por ejemplo, en el del comando "git" el argumento luego de los parametros (observar que no tiene el atributo nombre) sería el <filepattern> (nombre de archivo) del usage del git.
				
	- el atributo "optional" permitiría definir estilos sobre el widget correspondiente que indiquen que el campo es obligatorio.
	- el atributo "descripción" es un texto que se muestra en un fieldtext no modificable al final de la pantalla.
	- el atributo "enable" habilita o deshabilita el campo en la pantalla para su edición/modificación. Por default son todos enable=true.
	- el atributo "auxiliar", si está en true significa que el nombre no será considerado para armar el comando. Default: false
	- el atributo "separador" permite definir un separador entre el nombre del argumento y su valor. Permite armar argumentos de tipo propertie. Por ejemplo, si se especifica separator="=": --date=YYYY/MM/DD. Si no se especifica queda: --date YYYY/MM/DD
	- el atributo "orden" es opcional. Se usa para definir un orden de los campos en la pantalla, y (posiblemente) validaciones sobre dichos elementos.	 
	- el argumento default (o sea, si no se especifica tipo): tipo Text. Por ejemplo, el  campo mensaje de la aplicación "echo".
	- posibles mask para el campo number (que es un fieldtext con formato): #, ##.##...
	- posibles mask para el campo fecha: YYYYMMDD, DD-MM-YYYY
	- en las reglas, VALOR representa el valor actual del argumento. Las reglas son validaciones sobre el campo actual. 
	- las validaciones de la aplicación del comando se definen luego de los argumentos. Se define un tag para la acción donde el nombre representa el nombre del método a invocar en Java (se resuelve por reflection), y los parámetros se especifican en el orden que espera el método. 
					- el tag <parametro> se usa para el valor de los campos definidos en el xml. 
					- el tag <constante> se usa para pasarle valores constantes al método (cadenas, números).
	
	
-tag <comando>:
	- un comando tiene que tener por lo menos una aplicacion
	- son opcionales los tags parametros, argumentos y salida. Por ejemplo, un aplicacion puede no tener subparametros; en ese caso, se le especifican solo los argumentos, si existieran.
	- en la salida se le puede especificar el path de un archivo donde se guardará la salida del comando.


- pantalla:

	- los comandos parametrizados se representan como un botón que lleva a la pantalla siguiente.
	- el layout de las pantallas de cada comando tendrá los botones: Cancelar, Volver, Aceptar, Limpiar, y un textfield de sólo lectura donde irá, si lo hubiere, lo definido en el atributo "descripción" de la representación en pantalla del argumento que tiene el foco.
